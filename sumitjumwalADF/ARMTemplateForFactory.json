{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "sumitjumwalADF"
		},
		"ADLS_CSV_LS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS_CSV_LS'"
		},
		"ADLS_JSON_LS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS_JSON_LS'"
		},
		"SQL_Sample_database_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQL_Sample_database'"
		},
		"ADLS_CSV_LS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://athiranambiar1991.dfs.core.windows.net/"
		},
		"ADLS_JSON_LS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://athiranambiar1991.dfs.core.windows.net/"
		},
		"RESTApi_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://restcountries.com/v3.1/name"
		},
		"Assignemnt10_storage_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/b48c28de-b7cd-4176-a809-6e3f48e95165/resourceGroups/DataEngineering/providers/Microsoft.Storage/storageAccounts/athiranambiar1991"
		},
		"storage_trigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/b48c28de-b7cd-4176-a809-6e3f48e95165/resourceGroups/DataEngineering/providers/Microsoft.Storage/storageAccounts/athiranambiar1991"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Assignement8_Q3_advance')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Assignment8_Q3_advance",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DatabaseFromSQL": {},
									"JSON": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-27T03:45:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Assignment8_Q3_advance')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment10_Q2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_country",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@createArray('india','us','uk','china','russia')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "REST_DS",
											"type": "DatasetReference",
											"parameters": {
												"CountryName": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CSV_FILE_DS",
											"type": "DatasetReference",
											"parameters": {
												"Filename": {
													"value": "@concat(item(),'.CSV')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Failed_Notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ForEach_country",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-54.eastus.logic.azure.com:443/workflows/76e0463aa16e4c7784cb9e171a96a28b/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=34NReotWMEIIUn7rcBooiKgvP59osQn6o9eq0w6rWCE",
							"method": "POST",
							"headers": {},
							"body": {
								"Sendto": "sumitjumwal1996@gmail.com",
								"FailedMessage": "This Pipeline is failled : Assignement10_Q2",
								"Status": "Failed",
								"Subject": "Pipeline failed Assignment10_Q2"
							}
						}
					},
					{
						"name": "Successs_Notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ForEach_country",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-54.eastus.logic.azure.com:443/workflows/76e0463aa16e4c7784cb9e171a96a28b/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=34NReotWMEIIUn7rcBooiKgvP59osQn6o9eq0w6rWCE",
							"method": "POST",
							"headers": {},
							"body": {
								"Sendto": "sumitjumwal1996@gmail.com",
								"FailedMessage": "This Pipeline ran ok : Assignement10_Q2",
								"Status": "Failed",
								"Subject": "Pipeline ok Assignment10_Q2"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/REST_DS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_FILE_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment10_Q6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CSVtoJSON",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CSV_FILE_DS",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "india.CSV"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "JSON_DS",
								"type": "DatasetReference",
								"parameters": {
									"Filepath": "JSON"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSV_FILE_DS')]",
				"[concat(variables('factoryId'), '/datasets/JSON_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment7_Q3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_meta",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CSV_DS",
								"type": "DatasetReference",
								"parameters": {
									"FilePath": "CSV"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "For_activity",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get_meta",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_meta').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "coheck_filename",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@and(equals(item().type,'File'),equals(item().name,'ADF-copy.csv'))\n",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Copy data1_copy1",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "CSV_FILE_DS",
														"type": "DatasetReference",
														"parameters": {
															"Filename": {
																"value": "ADF-copy.csv",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "SQL_Generic_DS",
														"type": "DatasetReference",
														"parameters": {
															"TableName": "Test",
															"SchemaName": "SalesLT"
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-15T01:05:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSV_DS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_FILE_DS')]",
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment7_Q4_incremental_pipeline_HW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "HW_VALUE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "HW_SQL_DS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Get_last_Date_modified",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "HW_VALUE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(ModifiedDate) as lastmodifieddate from SalesLT.Customer",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Customer",
									"SchemaName": "SalesLT"
								}
							}
						}
					},
					{
						"name": "Copy_Customer_to_customer_Copy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get_last_Date_modified",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from SalesLT.Customer where ModifiedDate > '@{activity('HW_VALUE').output.firstRow.HWdate}' and ModifiedDate <= '@{activity('Get_last_Date_modified').output.firstRow.lastmodifieddate}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"CustomerID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Customer",
									"SchemaName": "SalesLT"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Customer_copy",
									"SchemaName": "SalesLT"
								}
							}
						]
					},
					{
						"name": "Update HW Table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_Customer_to_customer_Copy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select 'Customer' as TableName,'@{activity('Get_last_Date_modified').output.firstRow.lastmodifieddate}' as HWtable",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"TableName"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TableName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TableName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HWtable",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "HWdate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "HW_SQL_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HW_SQL_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-22T18:41:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HW_SQL_DS')]",
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment7_Q4_incremental_pipeline_HW_Custom')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_last_Date_modified",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select max(ModifiedDate) as lastmodifieddate from SalesLT.@{pipeline().parameters.TableName}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Customer",
									"SchemaName": "SalesLT"
								}
							}
						}
					},
					{
						"name": "Copy_Customer_to_customer_Copy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get_last_Date_modified",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "HW_VALUE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from SalesLT.@{pipeline().parameters.TableName} where ModifiedDate > '@{activity('HW_VALUE').output.firstRow.HWdate}' and ModifiedDate <= '@{activity('Get_last_Date_modified').output.firstRow.lastmodifieddate}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": {
										"value": "@createArray(pipeline().parameters.Keycolumn)",
										"type": "Expression"
									}
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProductNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProductNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Color",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Color",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StandardCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "StandardCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "ListPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "ListPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "Size",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Size",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Weight",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 8
										},
										"sink": {
											"name": "Weight",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 8
										}
									},
									{
										"source": {
											"name": "ProductCategoryID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductCategoryID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ProductModelID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductModelID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SellStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SellStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SellEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SellEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DiscontinuedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DiscontinuedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ThumbNailPhoto",
											"type": "Byte[]",
											"physicalType": "varbinary"
										},
										"sink": {
											"name": "ThumbNailPhoto",
											"type": "Byte[]",
											"physicalType": "varbinary"
										}
									},
									{
										"source": {
											"name": "ThumbnailPhotoFileName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ThumbnailPhotoFileName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "rowguid",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "rowguid",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "@pipeline().parameters.TableName",
										"type": "Expression"
									},
									"SchemaName": "SalesLT"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "@concat(pipeline().parameters.TableName,'_copy')",
										"type": "Expression"
									},
									"SchemaName": "SalesLT"
								}
							}
						]
					},
					{
						"name": "Update HW Table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_Customer_to_customer_Copy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select '@{pipeline().parameters.TableName}' as TableName,'@{activity('Get_last_Date_modified').output.firstRow.lastmodifieddate}' as HWtable",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"TableName"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TableName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TableName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HWtable",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "HWdate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "HW_SQL_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HW_SQL_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "HW_VALUE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select HWdate from dbo.HWtable where TableName = '@{pipeline().parameters.TableName}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "HW_SQL_DS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"Keycolumn": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-23T08:25:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/HW_SQL_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment8_Q1_ADVANCE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Assignment8_Advance",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CSVSource": {},
									"Sinktodb": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-26T04:02:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Assignment8_Advance')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment8_Q1_data_flow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Assignment8_Q1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CSVCustomer": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-23T11:57:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Assignment8_Q1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment8_Q2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Assignment8_Q2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Assignment8_Q2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Customersource": {},
									"CustomerSourceAddr": {},
									"Adress": {},
									"SinkToJSON": {},
									"SinktoSQL": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-23T12:46:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Assignment8_Q2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment8_Q2_own')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "customeraddress",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Assignment8_Q2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Customersource": {},
									"CustomerSourceAddr": {},
									"Adress": {},
									"SinkToJSON": {},
									"SinktoSQL": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-23T14:04:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Assignment8_Q2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment8_Q3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Assignment8_Q3",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SQLCustomer": {},
									"CustomerAddrCSV": {},
									"sinkTOparquet": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-23T17:09:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Assignment8_Q3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment8_Q4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Assignment8_Q4",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ProductCSV": {},
									"sink1": {},
									"temp": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-24T02:13:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Assignment8_Q4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeletDuplicate')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FindDuplicate",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Source": {},
									"DeleteInSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-08T02:06:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FindDuplicate')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Foreach_Example')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Foreach_Example",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@createArray('Customer','CustomerAddress')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Foreach_Example_copy",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item()",
													"type": "Expression"
												},
												"SchemaName": "SalesLT"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CSV_DS",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": "ForEach_copy_example"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-05T02:37:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Foreach_Example2_Assignment7_Q5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For each table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@createArray('Customer','Product')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@if(equals(item(),'Customer'),'SELECT * FROM SalesLT.Customer where CustomerID > 100 and CustomerID < 1000' , 'SELECT * FROM SalesLT.Product where ProductID > 100')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item()",
													"type": "Expression"
												},
												"SchemaName": "SalesLT"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@concat(item(),'_copy')",
													"type": "Expression"
												},
												"SchemaName": "SalesLT"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-22T16:41:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Foreach_Example2_Assignment7_Q5_Method2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For each table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@createArray('SELECT * FROM SalesLT.Customer where CustomerID > 100 and CustomerID < 1000' , 'SELECT * FROM SalesLT.Product where ProductID > 100')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@item()",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item()",
													"type": "Expression"
												},
												"SchemaName": "SalesLT"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CSV_DS",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": "foreach"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-22T16:41:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Foreach_Example_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_row_data_product",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) [Rowcount] from SalesLT.Customer",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Customer",
									"SchemaName": "SalesLT"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Check_rows_count",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get_row_data_product",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('Get_row_data_product').output.firstRow.Rowcount ,100)\n\n",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_product",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": "if EXISTS (select 1 from sys.objects where name = 'Customer_copy')\nBEGIN\nTRUNCATE TABLE SalesLT.Customer_copy\nEND\n",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "Customer",
												"SchemaName": "SalesLT"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "customer_copy",
												"SchemaName": "SalesLT"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-06T02:00:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetMetaData_Example')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetMetaData_Example",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CSV_DS",
								"type": "DatasetReference",
								"parameters": {
									"FilePath": "CSV"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-11T02:45:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSV_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion_Customer_JOIN_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Ingestion_Customer_SQLDB_ADLS_copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "WITH cte AS (\nselect concat(a.FirstName,a.LastName) as Customer_name , b.AddressID as addressid from saleslt.Customer a \nLEFT join  saleslt.CustomerAddress b\non a.CustomerID = b.CustomerID)\nSELECT cte.Customer_name , \ncase when b.AddressID IS NOT NULL THEN concat(b.AddressLine1,b.AddressLine2)  \nELSE 'Adress not updates' end as Customer_address from cte \nleft join SalesLT.Address b\nON cte.addressid = b.AddressID\n\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "customer",
									"SchemaName": "SalesLT"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_DS",
								"type": "DatasetReference",
								"parameters": {
									"FilePath": {
										"value": "CSV\\Customerdetail",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-02T19:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion_Customer_SQLDB_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Ingestion_Customer_SQLDB_ADLS_copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "customer",
									"SchemaName": "SalesLT"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_DS",
								"type": "DatasetReference",
								"parameters": {
									"FilePath": {
										"value": "CSV\\Customer",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-02T18:43:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion_Customer_SQLDB_ADLS_Folder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Ingestion_Customer_SQLDB_ADLS_copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Address",
									"SchemaName": "SalesLT"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_DS",
								"type": "DatasetReference",
								"parameters": {
									"FilePath": {
										"value": "CSV\\Address",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-02T18:46:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion_Product_Addres_To_JSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_row_data_product",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) [Rowcount] from SalesLT.Product",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Product",
									"SchemaName": "SalesLT"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Check_rows_count",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get_row_data_product",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('Get_row_data_product').output.firstRow.Rowcount ,10)\r\n\r\n",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_product",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SQL_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "Product",
												"SchemaName": "SalesLT"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "JSON_DS",
											"type": "DatasetReference",
											"parameters": {
												"Filepath": "Product"
											}
										}
									]
								},
								{
									"name": "sub_Ingestion_Product_Addres_To_JSON",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Copy_product",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "sub_Ingestion_Product_Addres_To_JSON",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-05T01:55:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/JSON_DS')]",
				"[concat(variables('factoryId'), '/pipelines/sub_Ingestion_Product_Addres_To_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion_Product_To_JSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_row_data_product",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) [Rowcount] from SalesLT.Product",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Product",
									"SchemaName": "SalesLT"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Check_rows_count",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get_row_data_product",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('Get_row_data_product').output.firstRow.Rowcount ,10)\r\n\r\n",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_product",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SQL_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "Product",
												"SchemaName": "SalesLT"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "JSON_DS",
											"type": "DatasetReference",
											"parameters": {
												"Filepath": "Product"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-05T01:48:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/JSON_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion_Product_To_JSON_Q6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_threshold_from_adls",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Json_ASSIGNMENT5_Q6",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Check_threshold",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get_threshold_from_adls",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get_count_from_sql_CUSTOMER",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Get_count_from_sql_CUSTOMER').output.firstRow.rowcount,activity('Get_threshold_from_adls').output.value[1].CustomerThreshold)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_Customer",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SQL_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "Customer",
												"SchemaName": "SalesLT"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "JSON_DS",
											"type": "DatasetReference",
											"parameters": {
												"Filepath": "Customer"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Get_count_from_sql_CUSTOMER",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) [rowcount] from SalesLT.Customer",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Customer",
									"SchemaName": "SalesLT"
								}
							},
							"firstRowOnly": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-06T11:05:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json_ASSIGNMENT5_Q6')]",
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/JSON_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCD2_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "scd2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SCD2_DF",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Destination": {},
									"source": {},
									"InsertEvrything": {},
									"UpdateFlagwhenexist": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Coarse"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-04T13:12:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SCD2_DF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCD3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SCD3",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SCD3",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DestinationCustomer": {},
									"SourceCustomer": {},
									"Updatesink": {},
									"InserSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T03:35:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SCD3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Without_Foreach_Example')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Customer and Customer address",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Customer",
									"SchemaName": "SalesLT"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_DS",
								"type": "DatasetReference",
								"parameters": {
									"FilePath": "Customer"
								}
							}
						]
					},
					{
						"name": "Copy Customer and Customer address_copy1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Customer and Customer address",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "CustomerAddress",
									"SchemaName": "SalesLT"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_DS",
								"type": "DatasetReference",
								"parameters": {
									"FilePath": "CustomerAddress"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-05T02:31:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/api_to_SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "REST_DS",
								"type": "DatasetReference",
								"parameters": {
									"CountryName": "us"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "US",
									"SchemaName": "SalesLT"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/REST_DS')]",
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/common_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sub_common_pipeline_1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "sub_common_pipeline_1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "sub_common_pipeline_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "sub_common_pipeline_1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "sub_common_pipeline_2_copy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "sub_common_pipeline_3_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "sub_common_pipeline_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "sub_common_pipeline_3_copy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-06T03:04:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/sub_common_pipeline_1')]",
				"[concat(variables('factoryId'), '/pipelines/sub_common_pipeline_2_copy')]",
				"[concat(variables('factoryId'), '/pipelines/sub_common_pipeline_3_copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sub_Ingestion_Product_Addres_To_JSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_rowCount_address",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) [Rowcount] from SalesLT.Address",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Address",
									"SchemaName": "SalesLT"
								}
							}
						}
					},
					{
						"name": "Check_count_GT_100",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup_rowCount_address",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Lookup_rowCount_address').output.firstRow.Rowcount,100)\r\n",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_address",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "Address",
												"SchemaName": "SalesLT"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CSV_DS",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": "Address"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-05T01:55:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sub_common_pipeline_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sub_common_pipeline_1_copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Customer",
									"SchemaName": "SalesLT"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_DS",
								"type": "DatasetReference",
								"parameters": {
									"FilePath": {
										"value": "CSV/Customer/@{formatDateTime(utcNow(),'yyyy')}/@{formatDateTime(utcNow(),'MM')}/@{formatDateTime(utcNow(),'dd')}",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-06T03:04:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sub_common_pipeline_2_copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sub_common_pipeline_2_copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Product",
									"SchemaName": "SalesLT"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_DS",
								"type": "DatasetReference",
								"parameters": {
									"FilePath": {
										"value": "CSV/Product/@{formatDateTime(utcNow(),'yyyy')}/@{formatDateTime(utcNow(),'MM')}/@{formatDateTime(utcNow(),'dd')}",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-06T03:04:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sub_common_pipeline_3_copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sub_common_pipeline_3_copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "CustomerAddress",
									"SchemaName": "SalesLT"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_DS",
								"type": "DatasetReference",
								"parameters": {
									"FilePath": {
										"value": "CSV/CustomerAddress/@{formatDateTime(utcNow(),'yyyy')}/@{formatDateTime(utcNow(),'MM')}/@{formatDateTime(utcNow(),'dd')}",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-06T03:04:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 10
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-14T17:19:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_CSV_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADLS_DS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_CSV_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_FILE_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_CSV_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().Filename",
							"type": "Expression"
						},
						"folderPath": "CSV",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "COL1",
						"type": "String"
					},
					{
						"name": "COL2",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_CSV_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_CSV_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ADF-copy.csv",
						"folderPath": "CSV",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "COL1\tCOL2",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_CSV_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HW_SQL_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_Sample_database",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "HWtable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_Sample_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JSON_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_JSON_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Filepath": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADLS_DS"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().Filepath",
							"type": "Expression"
						},
						"fileSystem": "landing"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_JSON_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json_ASSIGNMENT5_Q6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_JSON_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "test2.json",
						"folderPath": "CSV",
						"fileSystem": "landing"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_JSON_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/REST_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RESTApi",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"CountryName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().CountryName",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RESTApi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Generic_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_Sample_database",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string",
						"defaultValue": "SalesLT"
					}
				},
				"folder": {
					"name": "SQL Datasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_Sample_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_CSV_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_CSV_LS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS_CSV_LS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_JSON_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_JSON_LS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS_JSON_LS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RESTApi')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RESTApi_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Sample_database')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQL_Sample_database_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignement10_Q3')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Assignment10_Q2",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 12,
						"startTime": "2023-08-15T20:30:00",
						"endTime": "2023-08-18T13:05:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Assignment10_Q2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignemnt10_storage')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Assignment10_Q6",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/landing/blobs/CSV",
					"blobPathEndsWith": "india.CSV",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('Assignemnt10_storage_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Assignment10_Q6')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tumbling')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 5,
					"startTime": "2023-08-15T04:35:00Z",
					"endTime": "2023-08-16T04:35:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/storage_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "trigger_test",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/landing/blobs/CSV/Customer",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('storage_trigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/trigger_test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "trigger_test",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2023-08-14T17:09:00",
						"endTime": "2023-08-15T05:09:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/trigger_test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment8_Advance')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ADLS_CSV_LS",
								"type": "LinkedServiceReference"
							},
							"name": "CSVSource"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "SQL_Sample_database",
								"type": "LinkedServiceReference"
							},
							"name": "Sinktodb"
						}
					],
					"transformations": [
						{
							"name": "SelectOddCustid"
						},
						{
							"name": "select1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CustomerID as short,",
						"          NameStyle as boolean,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          PasswordHash as string,",
						"          PasswordSalt as string,",
						"          rowguid as string,",
						"          ModifiedDate as string",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     fileSystem: 'landing',",
						"     fileName: 'customer',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true) ~> CSVSource",
						"CSVSource filter(notEquals(mod(CustomerID,2),0)) ~> SelectOddCustid",
						"alterRow1 select(mapColumn(",
						"          CustomerID,",
						"          FirstName,",
						"          EmailAddress",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"SelectOddCustid alterRow(upsertIf(true())) ~> alterRow1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CID as integer,",
						"          Name as string,",
						"          mailid as string",
						"     ),",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'SalesLT',",
						"     tableName: 'dummy',",
						"     insertable: false,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: true,",
						"     keys:['CID'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CID = CustomerID,",
						"          Name = FirstName,",
						"          mailid = EmailAddress",
						"     )) ~> Sinktodb"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_CSV_LS')]",
				"[concat(variables('factoryId'), '/linkedServices/SQL_Sample_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment8_Q1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ADLS_CSV_LS",
								"type": "LinkedServiceReference"
							},
							"name": "CSVCustomer"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "SQL_Sample_database",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CustomerID as integer,",
						"          NameStyle as boolean,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          PasswordHash as string,",
						"          PasswordSalt as string,",
						"          rowguid as string,",
						"          ModifiedDate as date 'MM/dd/yyyy'",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     fileSystem: 'landing',",
						"     fileName: 'customer',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true) ~> CSVCustomer",
						"CSVCustomer filter(mod(CustomerID,2) == 0) ~> filter1",
						"filter1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CustomerID as integer,",
						"          NameStyle as boolean,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          PasswordHash as string,",
						"          PasswordSalt as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'SalesLT',",
						"     tableName: 'Customer_copy',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     truncate: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CustomerID,",
						"          NameStyle,",
						"          Title,",
						"          FirstName,",
						"          MiddleName,",
						"          LastName,",
						"          Suffix,",
						"          CompanyName,",
						"          SalesPerson,",
						"          EmailAddress,",
						"          Phone,",
						"          PasswordHash,",
						"          PasswordSalt,",
						"          rowguid,",
						"          ModifiedDate",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_CSV_LS')]",
				"[concat(variables('factoryId'), '/linkedServices/SQL_Sample_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment8_Q2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ADLS_CSV_LS",
								"type": "LinkedServiceReference"
							},
							"name": "Customersource"
						},
						{
							"linkedService": {
								"referenceName": "ADLS_CSV_LS",
								"type": "LinkedServiceReference"
							},
							"name": "CustomerSourceAddr"
						},
						{
							"linkedService": {
								"referenceName": "SQL_Sample_database",
								"type": "LinkedServiceReference"
							},
							"name": "Adress"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ADLS_JSON_LS",
								"type": "LinkedServiceReference"
							},
							"name": "SinkToJSON"
						},
						{
							"linkedService": {
								"referenceName": "SQL_Sample_database",
								"type": "LinkedServiceReference"
							},
							"name": "SinktoSQL"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "select1"
						},
						{
							"name": "joinaddress"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CustomerID as short,",
						"          NameStyle as boolean,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          PasswordHash as string,",
						"          PasswordSalt as string,",
						"          rowguid as string,",
						"          ModifiedDate as string",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     fileSystem: 'landing',",
						"     fileName: 'customer',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true) ~> Customersource",
						"source(output(",
						"          CustomerID as integer,",
						"          AddressID as integer,",
						"          AddressType as string,",
						"          rowguid as string,",
						"          ModifiedDate as string",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     fileSystem: 'landing',",
						"     fileName: 'CustomerAddress',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true) ~> CustomerSourceAddr",
						"source(output(",
						"          AddressID as integer,",
						"          AddressLine1 as string,",
						"          AddressLine2 as string,",
						"          City as string,",
						"          StateProvince as string,",
						"          CountryRegion as string,",
						"          PostalCode as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'SalesLT',",
						"     tableName: 'Address',",
						"     isolationLevel: 'READ_COMMITTED') ~> Adress",
						"Customersource, CustomerSourceAddr join(Customersource@CustomerID == CustomerSourceAddr@CustomerID,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"joinaddress select(mapColumn(",
						"          CustomerID = Customersource@CustomerID,",
						"          FirstName,",
						"          AddressID = CustomerSourceAddr@AddressID,",
						"          EmailAddress,",
						"          Phone,",
						"          AddressType,",
						"          City,",
						"          CountryRegion",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"join1, Adress join(CustomerSourceAddr@AddressID == Adress@AddressID,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinaddress",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          AddressID as short,",
						"          AddressType as string,",
						"          CustomerID as short,",
						"          EmailAddress as string,",
						"          FirstName as string,",
						"          Phone as string",
						"     ),",
						"     format: 'json',",
						"     fileSystem: 'landing',",
						"     folderPath: 'Customer',",
						"     partitionFileNames:['Customeraddr_JSON_dataflow'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> SinkToJSON",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'SalesLT',",
						"     tableName: 'Test',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     recreate: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SinktoSQL"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_CSV_LS')]",
				"[concat(variables('factoryId'), '/linkedServices/SQL_Sample_database')]",
				"[concat(variables('factoryId'), '/linkedServices/ADLS_JSON_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment8_Q3')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "SQL_Sample_database",
								"type": "LinkedServiceReference"
							},
							"name": "SQLCustomer"
						},
						{
							"linkedService": {
								"referenceName": "ADLS_CSV_LS",
								"type": "LinkedServiceReference"
							},
							"name": "CustomerAddrCSV"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ADLS_CSV_LS",
								"type": "LinkedServiceReference"
							},
							"name": "sinkTOparquet"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "filter1"
						},
						{
							"name": "sortasc"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CustomerID as integer,",
						"          NameStyle as boolean,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          PasswordHash as string,",
						"          PasswordSalt as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'SalesLT',",
						"     tableName: 'Customer',",
						"     isolationLevel: 'READ_COMMITTED') ~> SQLCustomer",
						"source(output(",
						"          CustomerID as integer,",
						"          AddressID as integer,",
						"          AddressType as string,",
						"          rowguid as string,",
						"          ModifiedDate as string",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     fileSystem: 'landing',",
						"     fileName: 'CustomerAddress',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true) ~> CustomerAddrCSV",
						"SQLCustomer, CustomerAddrCSV join(SQLCustomer@CustomerID == CustomerAddrCSV@CustomerID,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 filter(SQLCustomer@CustomerID > 100 && SQLCustomer@CustomerID < 30000) ~> filter1",
						"filter1 sort(desc(SQLCustomer@CustomerID, true)) ~> sortasc",
						"sortasc select(mapColumn(",
						"          CustomerID = SQLCustomer@CustomerID,",
						"          FirstName,",
						"          MiddleName,",
						"          LastName,",
						"          ModifiedDateSQLDS = SQLCustomer@ModifiedDate,",
						"          AddressID,",
						"          AddressType,",
						"          ModifiedDateCSVDS = CustomerAddrCSV@ModifiedDate",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     fileSystem: 'landing',",
						"     folderPath: 'Customer',",
						"     compressionCodec: 'none',",
						"     partitionFileNames:['CustomerjoinAddress_parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          CustomerID,",
						"          FirstName,",
						"          MiddleName,",
						"          LastName,",
						"          ModifiedDateSQLDS,",
						"          AddressID,",
						"          AddressType,",
						"          ModifiedDateCSVDS",
						"     ),",
						"     partitionBy('hash', 1)) ~> sinkTOparquet"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_Sample_database')]",
				"[concat(variables('factoryId'), '/linkedServices/ADLS_CSV_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment8_Q3_advance')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "SQL_Sample_database",
								"type": "LinkedServiceReference"
							},
							"name": "DatabaseFromSQL"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ADLS_JSON_LS",
								"type": "LinkedServiceReference"
							},
							"name": "JSON",
							"rejectedDataLinkedService": {
								"referenceName": "ADLS_JSON_LS",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "AssignRow"
						},
						{
							"name": "DeletDuplicate"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CID as integer,",
						"          Name as string,",
						"          mailid as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'SalesLT',",
						"     tableName: 'dummy',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> DatabaseFromSQL",
						"DatabaseFromSQL window(over(Name),",
						"     asc(Name, true),",
						"     Rn = rowNumber()) ~> AssignRow",
						"AssignRow alterRow(deleteIf(greater(Rn,1))) ~> DeletDuplicate",
						"DeletDuplicate sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'json',",
						"     fileSystem: 'landing',",
						"     folderPath: 'Customer',",
						"     partitionFileNames:['Duplicate_deleted'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> JSON"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_Sample_database')]",
				"[concat(variables('factoryId'), '/linkedServices/ADLS_JSON_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment8_Q4')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ADLS_CSV_LS",
								"type": "LinkedServiceReference"
							},
							"name": "ProductCSV"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "SQL_Sample_database",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						},
						{
							"linkedService": {
								"referenceName": "SQL_Sample_database",
								"type": "LinkedServiceReference"
							},
							"name": "temp"
						}
					],
					"transformations": [
						{
							"name": "aggregate1"
						},
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ProductID as integer,",
						"          Name as string,",
						"          ProductNumber as string,",
						"          Color as string,",
						"          StandardCost as double,",
						"          ListPrice as double,",
						"          Size as string,",
						"          Weight as double,",
						"          ProductCategoryID as short,",
						"          ProductModelID as short,",
						"          SellStartDate as string,",
						"          SellEndDate as string,",
						"          DiscontinuedDate as string,",
						"          ThumbNailPhoto as string,",
						"          ThumbnailPhotoFileName as string,",
						"          rowguid as string,",
						"          ModifiedDate as string",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     fileSystem: 'landing',",
						"     folderPath: 'Product',",
						"     fileName: 'ProductCSV',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true) ~> ProductCSV",
						"filter1 aggregate(groupBy(ProductCategoryID,",
						"          Name),",
						"     ListPrice = max(ListPrice)) ~> aggregate1",
						"ProductCSV filter(notEquals(Color,'Blue')) ~> filter1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'SalesLT',",
						"     tableName: 'Test',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     recreate: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
						"filter1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'SalesLT',",
						"     tableName: 'test2',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     recreate: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> temp"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_CSV_LS')]",
				"[concat(variables('factoryId'), '/linkedServices/SQL_Sample_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FindDuplicate')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "SQL_Sample_database",
								"type": "LinkedServiceReference"
							},
							"name": "Source"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "SQL_Sample_database",
								"type": "LinkedServiceReference"
							},
							"name": "DeleteInSink"
						}
					],
					"transformations": [
						{
							"name": "window1"
						},
						{
							"name": "DeletAlter"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CustomerID as integer,",
						"          NameStyle as boolean,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          PasswordHash as string,",
						"          PasswordSalt as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp,",
						"          LastName_prev as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'SalesLT',",
						"     tableName: 'duplicate',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> Source",
						"Source window(over(LastName),",
						"     asc(CustomerID, true),",
						"     RowNumber = rowNumber()) ~> window1",
						"window1 alterRow(deleteIf(RowNumber>1)) ~> DeletAlter",
						"DeletAlter sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'SalesLT',",
						"     tableName: 'duplicate',",
						"     insertable: false,",
						"     updateable: false,",
						"     deletable: true,",
						"     upsertable: false,",
						"     keys:['CustomerID'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DeleteInSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_Sample_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FindDuplicate_to_CSV')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "SQL_Sample_database",
								"type": "LinkedServiceReference"
							},
							"name": "Source"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ADLS_CSV_LS",
								"type": "LinkedServiceReference"
							},
							"name": "DeleteInSink"
						}
					],
					"transformations": [
						{
							"name": "window1"
						},
						{
							"name": "DeletAlter"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CustomerID as integer,",
						"          NameStyle as boolean,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          PasswordHash as string,",
						"          PasswordSalt as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp,",
						"          LastName_prev as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'SalesLT',",
						"     tableName: 'duplicate',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> Source",
						"Source window(over(LastName),",
						"     asc(CustomerID, true),",
						"     RowNumber = rowNumber()) ~> window1",
						"window1 alterRow(deleteIf(RowNumber>1)) ~> DeletAlter",
						"DeletAlter sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'landing',",
						"     folderPath: 'CSV',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     partitionFileNames:['DeletedDuplicateCustomer'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> DeleteInSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_Sample_database')]",
				"[concat(variables('factoryId'), '/linkedServices/ADLS_CSV_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCD2_DF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "SQL_Sample_database",
								"type": "LinkedServiceReference"
							},
							"name": "Destination"
						},
						{
							"linkedService": {
								"referenceName": "SQL_Sample_database",
								"type": "LinkedServiceReference"
							},
							"name": "source"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "SQL_Sample_database",
								"type": "LinkedServiceReference"
							},
							"name": "InsertEvrything"
						},
						{
							"linkedService": {
								"referenceName": "SQL_Sample_database",
								"type": "LinkedServiceReference"
							},
							"name": "UpdateFlagwhenexist"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "select1"
						},
						{
							"name": "SourceFlag"
						},
						{
							"name": "filter2"
						},
						{
							"name": "alterRow1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CustomerID as integer,",
						"          NameStyle as boolean,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          PasswordHash as string,",
						"          PasswordSalt as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp,",
						"          Flag as long",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'SalesLT',",
						"     tableName: 'destination',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> Destination",
						"source(output(",
						"          CustomerID as integer,",
						"          NameStyle as boolean,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          PasswordHash as string,",
						"          PasswordSalt as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'SalesLT',",
						"     tableName: 'Source',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> source",
						"source, Destination join(source@CustomerID == Destination@CustomerID,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 select(mapColumn(",
						"          CustomerID = source@CustomerID,",
						"          NameStyle = source@NameStyle,",
						"          Title = source@Title,",
						"          FirstName = source@FirstName,",
						"          MiddleName = source@MiddleName,",
						"          LastName = source@LastName,",
						"          Suffix = source@Suffix,",
						"          CompanyName = source@CompanyName,",
						"          SalesPerson = source@SalesPerson,",
						"          EmailAddress = source@EmailAddress,",
						"          Phone = source@Phone,",
						"          PasswordHash = source@PasswordHash,",
						"          PasswordSalt = source@PasswordSalt,",
						"          rowguid = source@rowguid,",
						"          ModifiedDate = source@ModifiedDate,",
						"          destFlag = Flag",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> select1",
						"select1 derive(SourceColumn = 1) ~> SourceFlag",
						"select1 filter(destFlag == 1) ~> filter2",
						"filter2 alterRow(updateIf(1==1)) ~> alterRow1",
						"alterRow1 derive(Flag = 0) ~> derivedColumn1",
						"SourceFlag sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CustomerID as integer,",
						"          NameStyle as boolean,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          PasswordHash as string,",
						"          PasswordSalt as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp,",
						"          Flag as string",
						"     ),",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'SalesLT',",
						"     tableName: 'destination',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 2,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CustomerID,",
						"          NameStyle,",
						"          Title,",
						"          FirstName,",
						"          MiddleName,",
						"          LastName,",
						"          Suffix,",
						"          CompanyName,",
						"          SalesPerson,",
						"          EmailAddress,",
						"          Phone,",
						"          PasswordHash,",
						"          PasswordSalt,",
						"          rowguid,",
						"          ModifiedDate,",
						"          Flag = SourceColumn",
						"     )) ~> InsertEvrything",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CustomerID as integer,",
						"          NameStyle as boolean,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          PasswordHash as string,",
						"          PasswordSalt as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp,",
						"          Flag as string",
						"     ),",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'SalesLT',",
						"     tableName: 'destination',",
						"     insertable: false,",
						"     updateable: true,",
						"     deletable: false,",
						"     upsertable: false,",
						"     keys:['CustomerID'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CustomerID,",
						"          NameStyle,",
						"          Title,",
						"          FirstName,",
						"          MiddleName,",
						"          LastName,",
						"          Suffix,",
						"          CompanyName,",
						"          SalesPerson,",
						"          EmailAddress,",
						"          Phone,",
						"          PasswordHash,",
						"          PasswordSalt,",
						"          rowguid,",
						"          ModifiedDate,",
						"          Flag",
						"     )) ~> UpdateFlagwhenexist"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_Sample_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCD3')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "SQL_Sample_database",
								"type": "LinkedServiceReference"
							},
							"name": "DestinationCustomer"
						},
						{
							"linkedService": {
								"referenceName": "SQL_Sample_database",
								"type": "LinkedServiceReference"
							},
							"name": "SourceCustomer"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "SQL_Sample_database",
								"type": "LinkedServiceReference"
							},
							"name": "Updatesink"
						},
						{
							"linkedService": {
								"referenceName": "SQL_Sample_database",
								"type": "LinkedServiceReference"
							},
							"name": "InserSink"
						}
					],
					"transformations": [
						{
							"name": "JoinmatchingCID"
						},
						{
							"name": "MatchingRow"
						},
						{
							"name": "select1"
						},
						{
							"name": "MakeRowsalter"
						},
						{
							"name": "NotexistentRow"
						},
						{
							"name": "select2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CustomerID as integer,",
						"          NameStyle as boolean,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          PasswordHash as string,",
						"          PasswordSalt as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp,",
						"          LastName_prev as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'SalesLT',",
						"     tableName: 'SCD3_destination',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> DestinationCustomer",
						"source(output(",
						"          CustomerID as integer,",
						"          NameStyle as boolean,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          PasswordHash as string,",
						"          PasswordSalt as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'SalesLT',",
						"     tableName: 'SCD3_Source',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> SourceCustomer",
						"SourceCustomer, DestinationCustomer join(SourceCustomer@CustomerID == DestinationCustomer@CustomerID,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> JoinmatchingCID",
						"JoinmatchingCID filter(!isNull(DestinationCustomer@CustomerID)) ~> MatchingRow",
						"MatchingRow select(mapColumn(",
						"          CustomerID = SourceCustomer@CustomerID,",
						"          NameStyle = SourceCustomer@NameStyle,",
						"          Title = SourceCustomer@Title,",
						"          FirstName = SourceCustomer@FirstName,",
						"          MiddleName = SourceCustomer@MiddleName,",
						"          SourceLastName = SourceCustomer@LastName,",
						"          Suffix = SourceCustomer@Suffix,",
						"          CompanyName = SourceCustomer@CompanyName,",
						"          SalesPerson = SourceCustomer@SalesPerson,",
						"          EmailAddress = SourceCustomer@EmailAddress,",
						"          Phone = SourceCustomer@Phone,",
						"          PasswordHash = SourceCustomer@PasswordHash,",
						"          PasswordSalt = SourceCustomer@PasswordSalt,",
						"          rowguid = SourceCustomer@rowguid,",
						"          ModifiedDate = SourceCustomer@ModifiedDate,",
						"          DestinationLastname = DestinationCustomer@LastName",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> select1",
						"select1 alterRow(updateIf(DestinationLastname!=SourceLastName)) ~> MakeRowsalter",
						"JoinmatchingCID filter(isNull(DestinationCustomer@CustomerID)) ~> NotexistentRow",
						"NotexistentRow select(mapColumn(",
						"          CustomerID = SourceCustomer@CustomerID,",
						"          NameStyle = SourceCustomer@NameStyle,",
						"          Title = SourceCustomer@Title,",
						"          FirstName = SourceCustomer@FirstName,",
						"          MiddleName = SourceCustomer@MiddleName,",
						"          LastName = SourceCustomer@LastName,",
						"          Suffix = SourceCustomer@Suffix,",
						"          CompanyName = SourceCustomer@CompanyName,",
						"          SalesPerson = SourceCustomer@SalesPerson,",
						"          EmailAddress = SourceCustomer@EmailAddress,",
						"          Phone = SourceCustomer@Phone,",
						"          PasswordHash = SourceCustomer@PasswordHash,",
						"          PasswordSalt = SourceCustomer@PasswordSalt,",
						"          rowguid = SourceCustomer@rowguid,",
						"          ModifiedDate = SourceCustomer@ModifiedDate",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> select2",
						"MakeRowsalter sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'SalesLT',",
						"     tableName: 'SCD3_destination',",
						"     insertable: false,",
						"     updateable: true,",
						"     deletable: false,",
						"     upsertable: false,",
						"     keys:['CustomerID'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CustomerID,",
						"          NameStyle,",
						"          Title,",
						"          FirstName,",
						"          MiddleName,",
						"          LastName = SourceLastName,",
						"          Suffix,",
						"          CompanyName,",
						"          SalesPerson,",
						"          EmailAddress,",
						"          Phone,",
						"          PasswordHash,",
						"          PasswordSalt,",
						"          rowguid,",
						"          ModifiedDate,",
						"          LastName_prev = DestinationLastname",
						"     )) ~> Updatesink",
						"select2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'SalesLT',",
						"     tableName: 'SCD3_destination',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 2,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CustomerID,",
						"          NameStyle,",
						"          Title,",
						"          FirstName,",
						"          MiddleName,",
						"          LastName,",
						"          Suffix,",
						"          CompanyName,",
						"          SalesPerson,",
						"          EmailAddress,",
						"          Phone,",
						"          PasswordHash,",
						"          PasswordSalt,",
						"          rowguid,",
						"          ModifiedDate",
						"     )) ~> InserSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_Sample_database')]"
			]
		}
	]
}